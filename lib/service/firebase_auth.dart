import 'package:firebase_auth/firebase_auth.dart';class FirebaseAuthService {  FirebaseAuthService._();  factory FirebaseAuthService.getInstance() => _instance;  static final FirebaseAuthService _instance = FirebaseAuthService._();  FirebaseAuth _firebaseAuth = FirebaseAuth.instance;  Future<void> verifyPhoneNumber(      {String phoneNumber,        Function codeSentCallBack,        Function verificationCompleted,        Function codeAutoRetrievalTimeout,        Function verificationFailed}) async {    return await _firebaseAuth.verifyPhoneNumber(        phoneNumber: phoneNumber,        timeout: Duration(seconds: 10),        verificationCompleted: verificationCompleted,        verificationFailed: verificationFailed,        codeSent: codeSentCallBack,        codeAutoRetrievalTimeout: codeAutoRetrievalTimeout);  }  Future<String> signinAuto(AuthCredential auth) async {    var resp = await _firebaseAuth.signInWithCredential(auth);    var signedInUser = resp.user;    Map<String, dynamic> value = {      'uid': signedInUser.uid,      'phoneNumber': signedInUser.phoneNumber,    };    return signedInUser.phoneNumber;  }  Future<String> verifyOTP({String verfId, String otp}) async {    AuthCredential credential =    PhoneAuthProvider.getCredential(verificationId: verfId, smsCode: otp);    var result = await FirebaseAuth.instance.signInWithCredential(credential);    if (result.user == null) {      print("user null");      return null;    }    var signedInUser = result.user;    bool newUser = result.additionalUserInfo.isNewUser;    Map<String, dynamic> value = {      'uid': signedInUser.uid,      'phoneNumber': signedInUser.phoneNumber,    };    print("user got");    return signedInUser.phoneNumber;  }  }