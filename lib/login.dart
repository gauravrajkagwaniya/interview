import 'package:flutter/material.dart';import 'package:flutter_interview/store/user_store.dart';import 'package:flutter_interview/utils/store_observer.dart';class Login extends StatefulWidget {  @override  _LoginState createState() => _LoginState();}class _LoginState extends State<Login> {/*  final _phoneController = TextEditingController();  final _codeController = TextEditingController();*/  final formKey = new GlobalKey<FormState>();  static String key = "login";  String verificationId, smsCode;  String username = "";  bool isCodeSent = false;  String phoneNo = "";  bool isSuccess = false;  var reactionDisposer;/*  Future<bool> loginUser(String phone, BuildContext context) async {    FirebaseAuth _auth = FirebaseAuth.instance;    _auth.verifyPhoneNumber(        phoneNumber: phone,        timeout: Duration(seconds: 60),        verificationCompleted: (AuthCredential credential) async {          Navigator.of(context).pop();          AuthResult result = await _auth.signInWithCredential(credential);          FirebaseUser user = result.user;          if (user != null) {            Navigator.push(                context, MaterialPageRoute(builder: (context) => Home()));          } else {            print("Error");          }        },        verificationFailed: (AuthException exception) {          print(exception);        },        codeSent: (String verificationId, [int forceResendingToken]) {          showDialog(              context: context,              barrierDismissible: false,              builder: (context) {                return AlertDialog(                  title: Text("Give the code?"),                  content: Column(                    mainAxisSize: MainAxisSize.min,                    children: <Widget>[                      TextField(                        controller: _codeController,                      ),                    ],                  ),                  actions: <Widget>[                    FlatButton(                      child: Text("Confirm"),                      textColor: Colors.white,                      color: Colors.blue,                      onPressed: () async {                        final code = _codeController.text.trim();                        AuthCredential credential =                        PhoneAuthProvider.getCredential(                            verificationId: verificationId, smsCode: code);                        AuthResult result =                        await _auth.signInWithCredential(credential);                        FirebaseUser user = result.user;                        if (user != null) {                          Navigator.push(context,                              MaterialPageRoute(builder: (context) => Home()));                        } else {                          print("Error");                        }                      },                    )                  ],                );              });        },        codeAutoRetrievalTimeout: null);  }*/  List<String> _gender = ['male', 'female'];  String selectedGender;  List<String> _age = ['below 18', 'above 18'];  String selectedAge;  @override  Widget build(BuildContext context) {    return Scaffold(        body: StoreObserver<UserStore>(            builder: (UserStore userStore, BuildContext context) {              return SingleChildScrollView(                child: Container(                  margin: EdgeInsets.symmetric(horizontal: 30, vertical: 100),                  child: Form(                    child: Column(                      crossAxisAlignment: CrossAxisAlignment.start,                      mainAxisAlignment: MainAxisAlignment.center,                      children: <Widget>[                        Text(                          "Login",                          style: TextStyle(                              color: Colors.green,                              fontSize: 36,                              fontWeight: FontWeight.w500),                        ),                        SizedBox(                          height: 16,                        ),                        TextFormField(keyboardType: TextInputType.phone,                          initialValue: phoneNo.length > 10 &&                              phoneNo.startsWith("+91")                              ? phoneNo.substring(3)                              : phoneNo,                          decoration: InputDecoration(                              enabledBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.all(                                      Radius.circular(8)),                                  borderSide: BorderSide(                                      color: Colors.grey[200])),                              focusedBorder: OutlineInputBorder(                                  borderRadius: BorderRadius.all(                                      Radius.circular(8)),                                  borderSide: BorderSide(                                      color: Colors.grey[300])),                              filled: true,                              fillColor: Colors.grey[100],                              hintText: "Mobile Number"),                          onChanged: (val) {                            setState(() {                              phoneNo = "+91" + val.trim();                            });                          },                          /* controller: _phoneController,*/                        ),                        SizedBox(height: 8,),                        userStore.isCodeSent                            ? Column(                          mainAxisAlignment:                          MainAxisAlignment.center,                          crossAxisAlignment:                          CrossAxisAlignment.center,                          children: [                            Container(                              margin: EdgeInsets.symmetric(                                  vertical: 10.0,                                  horizontal: 20.0),                              decoration: BoxDecoration(                                  color: Colors.grey[100],                                  borderRadius:                                  BorderRadius.circular(20.0),                                  border: Border.all(                                      color: Colors.grey)),                              child: Column(                                children: [                                  Padding(                                    padding: EdgeInsets.only(                                        left: 25.0, right: 25.0),                                    child: TextFormField(                                      keyboardType:                                      TextInputType.phone,                                      decoration: InputDecoration(                                        hintText: "OTP",                                        border: InputBorder.none,                                      ),                                      onChanged: (val) {                                        setState(() {                                          this.smsCode =                                              val.trim();                                        });                                      },                                    ),                                  ),                                ],                              ),                            ),                            SizedBox(                              height: 8,                            ),                          ],                        )                            : Container(),                        SizedBox(                          height: 16,                        ),                        DropdownButton(                          hint: Text('choose your gender'),                          value: selectedGender,                          onChanged: (genVal) {                            setState(() {                              selectedGender = genVal;                            });                          },                          items: _gender.map((location) {                            return DropdownMenuItem(                              child: Text(location),                              value: location,                            );                          }).toList(),                        ),                        SizedBox(                          height: 16,                        ),                        DropdownButton(                          hint: Text('choose your age'),                          value: selectedAge,                          onChanged: (ageVal) {                            setState(() {                              selectedAge = ageVal;                            });                          },                          items: _age.map((location) {                            return DropdownMenuItem(                              child: new Text(location),                              value: location,                            );                          }).toList(),                        ),                        SizedBox(                          height: 16,                        ),                        Container(                          width: double.infinity,                          child: FlatButton(                            child: Text("LOGIN"),                            textColor: Colors.white,                            padding: EdgeInsets.all(16),                            onPressed: () {                              /*  final phone = _phoneController.text.trim();                              loginUser(phone, context);*/                              if (userStore.isLoading) {                                return;                              }                              userStore.isCodeSent ?                              signInWithOTP(userStore)                                  : verifyPhone(userStore);                            },                            color: Colors.blue,                          ),                        )                      ],                    ),                  ),                ),);            })    );  }  signInWithOTP(UserStore userStore) async {    await userStore.verifyOTP(otp: smsCode).then((_) {}).catchError((e) {    });  }  verifyPhone(UserStore userStore) async {    try{      await userStore.sendOTP(phoneNumber: phoneNo).catchError((e){      }).then((_) {      }).catchError((onError){});    }catch(e){    }  }}